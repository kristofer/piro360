package rocks.zipcode.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PiroAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPiroAllPropertiesEquals(Piro expected, Piro actual) {
        assertPiroAutoGeneratedPropertiesEquals(expected, actual);
        assertPiroAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPiroAllUpdatablePropertiesEquals(Piro expected, Piro actual) {
        assertPiroUpdatableFieldsEquals(expected, actual);
        assertPiroUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPiroAutoGeneratedPropertiesEquals(Piro expected, Piro actual) {
        assertThat(expected)
            .as("Verify Piro auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPiroUpdatableFieldsEquals(Piro expected, Piro actual) {
        assertThat(expected)
            .as("Verify Piro relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.gets3urltovideo()).as("check s3urltovideo").isEqualTo(actual.gets3urltovideo()))
            .satisfies(e -> assertThat(e.getCreated()).as("check created").isEqualTo(actual.getCreated()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPiroUpdatableRelationshipsEquals(Piro expected, Piro actual) {
        assertThat(expected)
            .as("Verify Piro relationships")
            .satisfies(e -> assertThat(e.getTags()).as("check tags").isEqualTo(actual.getTags()));
    }
}
